name: CI

on:
  release:
    types:
      - published
  push:
  pull_request:

jobs:
  website:
    name: build website
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          python-version: "3.11"
          environment-file: continuous_integration/environment.yaml
          activate-environment: test-environment

      - name: Install geoxarray
        shell: bash -l {0}
        run: |
          pip install -r requirements-dev.txt; \
          pip install --no-deps -e .

      - name: Run Sphinx Build
        shell: bash -l {0}
        run: |
          cd docs; \
          make doctest; \
          make html SPHINXOPTS="-W"

#      - name: Prepare tag
#        id: prepare_tag
#        if: startsWith(github.ref, 'refs/tags/')
#        run: |
#          TAG_NAME="${GITHUB_REF##refs/tags/}"
#          echo "::set-output name=tag_name::${TAG_NAME}"

      - name: Deploy Release Website
        if: github.event_name == 'release'
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.GEOXARRAY_WEBSITE_TOKEN }}
          publish_dir: docs/build/html
          publish_branch: main
#          destination_dir: ${{ steps.prepare_tag.outputs.tag_name }}
          destination_dir: stable
          allow_empty_commit: true
          external_repository: geoxarray/geoxarray.github.io
          full_commit_message: "Deploy geoxarray.github.io website for SHA:${{ github.sha }} (Ref: ${{ github.ref }})"

      - name: Deploy 'latest' Website
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.GEOXARRAY_WEBSITE_TOKEN }}
          publish_dir: docs/build/html
          publish_branch: main
          destination_dir: latest
          allow_empty_commit: true
          external_repository: geoxarray/geoxarray.github.io
          full_commit_message: "Deploy geoxarray.github.io website for SHA:${{ github.sha }} (Ref: ${{ github.ref }})"

  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: true
      matrix:
        os: ["windows-latest", "ubuntu-latest", "macos-latest"]
        python-version: ["3.9", "3.11"]
        experimental: [false]
        include:
          - python-version: "3.11"
            os: "ubuntu-latest"
            experimental: true

    env:
      PYTHON_VERSION: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}
      UNSTABLE: ${{ matrix.experimental }}
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          python-version: ${{ matrix.python-version }}
          environment-file: continuous_integration/environment.yaml
          activate-environment: test-environment

      - name: Install unstable dependencies
        if: matrix.experimental == true
        shell: bash -l {0}
        run: |
          python -m pip install \
          --index-url https://pypi.anaconda.org/scientific-python-nightly-wheels/simple/ \
          --trusted-host pypi.anaconda.org \
          --no-deps --pre --upgrade \
          matplotlib \
          numpy \
          pandas \
          scipy; \
          python -m pip install \
          --no-deps --upgrade \
          git+https://github.com/dask/dask \
          git+https://github.com/dask/distributed \
          git+https://github.com/zarr-developers/zarr \
          git+https://github.com/Unidata/cftime \
          git+https://github.com/mapbox/rasterio \
          git+https://github.com/pydata/bottleneck \
          git+https://github.com/pydata/xarray;

      - name: Install geoxarray
        shell: bash -l {0}
        run: |
          pip install --no-deps -e .

      - name: Run unit tests
        shell: bash -l {0}
        run: |
          pytest --cov=geoxarray geoxarray/tests

      - name: Coveralls Parallel
        uses: AndreMiras/coveralls-python-action@develop
        with:
          flag-name: run-${{ matrix.test_number }}
          parallel: true
        if: runner.os == 'Linux'

  coveralls:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel-finished: true

